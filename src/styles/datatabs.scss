/*
.tabs {
  li:last-of-type {
    display:none;
  }
}
*/

/* Each tab is wrapped in a router a tag */

.tabs {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;

  position: relative;
  z-index: 2001;
  top: 1px;

  margin-top: 0px;
  margin-bottom: 25px;
  margin-left: 0px;
  padding: 0px;
  grid-gap: 0px;

  @include respond-to(handheld) {
    width: 100vw;
    overflow-y: scroll;
    margin-bottom: 0px;
  }

  li {
    width: 100px;
    overflow: hidden;
    background-color: #E7E7E7;
    @include respond-to(handheld) {
        width: 85px;
        height: 75px;
        margin-bottom: 0px;
        display: block;
    }
    @include respond-to(tiny) {
        width: 80px;
    }
  }

  li.active {
      font-family: "Lato-Bold", sans-serif;
      font-weight: 700;
      background-color: #fff;
      color: $primary_color;
      opacity: 1;
      box-shadow:inset 0px 0px 0px 1px #e7e7e7;

      @include respond-to(handheld) {
          box-shadow: none;
      }
  }

  a:link, a:visited {
    display: block;
    font-family: "Lato-Regular", sans-serif;
    text-transform: uppercase;
    text-decoration: none;
    color: $primary_color;
    padding: 50px 10px 10px 10px;
    text-align: center;
    font-size: .8em;
    opacity: .75;

    @include respond-to(handheld) {
      padding: 0px;
      width: 100%;
      height: 100%;
    }

    & span.tab-title {
      @include respond-to(handheld) {
        font-size: 0.75em;
        position: relative;
        display: block;
        top: 50px;
      }
      @include respond-to(tiny) {

      }
    }
  }
}

.tab-icon {
  background-repeat: no-repeat;
  background-position: center 16px;
  background-size: 26px auto;
}

/* For the Data Tabs, there *should* be a way to just dynamically call a section-name.svg and then change the fill color of that svg on hover, focus and active state. Using <use> was useless. <object> calls a source by the data= attribute, which Vue thinks is ridiculous. So for now we have two sets of simple svg icons, and like animals, we swap them out. */

.tab-icon--text-section {
    background-image: url(~@/assets/book-open.svg);
}
.tab-icon--plants {
    background-image: url(~@/assets/plants.svg);
}
.tab-icon--mussels {
    background-image: url(~@/assets/clam.svg);
}
.tab-icon--photos {
    background-image: url(~@/assets/camera.svg);
}
.tab-icon--documents,
.tab-icon--resources {
    background-image: url(~@/assets/file.svg);
}
.tab-icon--watershed {
    background-image: url(~@/assets/water.svg);
}

/* Regarding the use of the 'focus-within' psuedo-class.
 * Specified in the Selectors Level 4 Working Draft.
 * 
 * The 'focus' psuedo-class is not available for the 'li'
 * element as is used here in order to slip the palette
 * of active tabs.
 *
 * The 'has' selector, while also a level 4 selector,
 * may only be used with 'document.querySelector' and
 * does not yet have any document browser support.
 *
 * 'focus-within', on the other hand is widely available
 * in mainstream browsers. The following link details
 * current browser support.
 * 
 * Refs: https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within
 * 
 */
.tab-icon.not-active:focus-within,
.tab-icon.not-active:hover {
    background-color: $primary_color;

    a {
        color: white;
        opacity: 1;
    }
}
.tab-icon--text-section.not-active:focus-within,
.tab-icon--text-section.not-active:hover {
    background-image: url(~@/assets/book-open-white.svg);
}
.tab-icon--plants.not-active:focus-within,
.tab-icon--plants.not-active:hover {
    background-image: url(~@/assets/plants-white.svg);
}
.tab-icon--mussels.not-active:focus-within,
.tab-icon--mussels.not-active:hover {
    background-image: url(~@/assets/clam-white.svg);
}
.tab-icon--photos.not-active:focus-within,
.tab-icon--photos.not-active:hover {
    background-image: url(~@/assets/camera-white.svg);
}
.tab-icon--documents.not-active:focus-within,
.tab-icon--documents.not-active:hover,
.tab-icon--resources.not-active:focus-within,
.tab-icon--resources.not-active:hover {
    background-image: url(~@/assets/file-white.svg);
}
.tab-icon--watershed.not-active:focus-within,
.tab-icon--watershed.not-active:hover {
    background-image: url(~@/assets/water-white.svg);
}

.data-section {
  background-color: white;
  padding: 15px;

  h3 {
    font-family: "Lato-Bold", sans-serif;
    font-size: 1.1em;
    font-weight: 700;
  }
}
